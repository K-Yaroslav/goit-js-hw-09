{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAGzBC,EAAYC,IAChBC,EAAAR,GAASS,OAAOF,QAAQ,KAAGA,MAGvBG,EAAWC,IACfH,EAAAR,GAASS,OAAOG,QAAQ,KAAGD,MAGvBE,EAAgB,CAACC,EAAUC,IACxB,IAAIC,SAAQ,CAACC,EAASN,KAC3B,MAAMO,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFD,EAAQ,qBAAqBH,QAAeC,QAE5CJ,EAAO,oBAAoBG,QAAeC,UAE3CA,MAsBPb,EAAKC,KAAKmB,iBAAiB,UAlBNC,IACnBA,EAAMC,iBACN,MAAMC,EAASF,EAAMG,cAAcC,SAASF,OAAOG,MAC7CC,EAAOC,SAASP,EAAMG,cAAcC,SAASE,KAAKD,OACxD,IAAIb,EAAQe,SAASP,EAAMG,cAAcC,SAASZ,MAAMa,OAExD,MAAMG,EAAW,GAEjB,IAAK,IAAIC,EAAI,EAAGA,GAAKP,EAAQO,IAC3BX,YAAW,KACTU,EAASE,KAAKpB,EAAcmB,EAAGjB,GAAOmB,KAAK5B,GAAW6B,MAAMzB,IAC5DK,GAASc,IACRd,GAGLC,QAAQoB,IAAIL","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('form'),\n};\n\nconst onFulfill = success => {\n  Notiflix.Notify.success(`✅ ${success}`);\n};\n\nconst onReject = reject => {\n  Notiflix.Notify.failure(`❌ ${reject}`);\n};\n\nconst createPromise = (position, delay) => {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`Fulfilled promise ${position} in ${delay} ms`);\n      } else {\n        reject(`Rejected promise ${position} in ${delay} ms`);\n      }\n    }, delay);\n  });\n};\n\nconst handleSubmit = event => {\n  event.preventDefault();\n  const amount = event.currentTarget.elements.amount.value;\n  const step = parseInt(event.currentTarget.elements.step.value);\n  let delay = parseInt(event.currentTarget.elements.delay.value);\n\n  const promises = [];\n\n  for (let i = 1; i <= amount; i++) {\n    setTimeout(() => {\n      promises.push(createPromise(i, delay).then(onFulfill).catch(onReject));\n      delay += step;\n    }, delay);\n  }\n\n  Promise.all(promises);\n};\n\nrefs.form.addEventListener('submit', handleSubmit);\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","$47d4ff9957288465$var$onFulfill","success","$parcel$interopDefault","Notify","$47d4ff9957288465$var$onReject","reject","failure","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","amount","currentTarget","elements","value","step","parseInt","promises","i","push","then","catch","all"],"version":3,"file":"03-promises.9c8e7ee5.js.map"}